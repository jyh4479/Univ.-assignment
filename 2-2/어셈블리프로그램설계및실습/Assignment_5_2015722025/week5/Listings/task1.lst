


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Floatingpoint, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000         start
    5 00000000 E59F00FC        LDR              r0,Address1
    6 00000004 E59F10EC        LDR              r1,float1   ;value
    7 00000008 E59F20EC        LDR              r2,float2
    8 0000000C E59FA0EC        LDR              r10,mantissa ;for adding 1 to m
                                                            antissa and compari
                                                            ng
    9 00000010         
   10 00000010 E1510002        CMP              r1,r2       ;compare two float 
                                                            value
   11 00000014 0A000003        BEQ              CMPNUM
   12 00000018 E1A03081        MOV              r3,r1,LSL #1
   13 0000001C E1A04082        MOV              r4,r2,LSL #1
   14 00000020 E1530004        CMP              r3,r4
   15 00000024 0A000031        BEQ              Savevalue   ;when the result is
                                                             zero
   16 00000028         
   17 00000028         CMPNUM
   18 00000028 E1A03FA1        MOV              r3,r1,LSR #31 ;Declare S1
   19 0000002C E1A04FA2        MOV              r4,r2,LSR #31 ;Declare S2
   20 00000030         
   21 00000030 E1A05481        MOV              r5,r1,LSL #9 ;Declare Mantissa 
                                                            F1
   22 00000034 E1A054A5        MOV              r5,r5,LSR #9
   23 00000038 E1A06482        MOV              r6,r2,LSL #9 ;F2
   24 0000003C E1A064A6        MOV              r6,r6,LSR #9
   25 00000040         
   26 00000040 E1A07081        MOV              r7,r1,LSL #1
   27 00000044 E1A07C27        MOV              r7,r7,LSR #24 ;E1
   28 00000048 E1A08082        MOV              r8,r2,LSL #1
   29 0000004C E1A08C28        MOV              r8,r8,LSR #24 ;E2
   30 00000050         
   31 00000050 E085500A        ADD              r5,r5,r10   ;ADD 1 to mantisa
   32 00000054 E086600A        ADD              r6,r6,r10
   33 00000058         
   34 00000058 E1570008        CMP              r7,r8       ;compare exponent
   35 0000005C C0479008        SUBGT            r9,r7,r8
   36 00000060 B0489007        SUBLT            r9,r8,r7    ;shift num
   37 00000064         
   38 00000064 E1570008        CMP              r7,r8
   39 00000068 C1A06936        MOVGT            r6,r6,LSR r9 ;if shift num is n
                                                            ot 0
   40 0000006C B1A05935        MOVLT            r5,r5,LSR r9
   41 00000070         
   42 00000070 E1570008        CMP              r7,r8       ;compare exponent
   43 00000074 C1A0D007        MOVGT            r13,r7
   44 00000078 D1A0D008        MOVLE            r13,r8
   45 0000007C         
   46 0000007C E1530004        CMP              r3,r4
   47 00000080 0A000000        BEQ              EQADD
   48 00000084 EA000005        B                NEADD
   49 00000088         
   50 00000088         EQADD
   51 00000088 E0855006        ADD              r5,r5,r6    ;adding mantissa
   52 0000008C E08AA00A        ADD              r10,r10,r10
   53 00000090 E155000A        CMP              r5,r10



ARM Macro Assembler    Page 2 


   54 00000094 C1A050A5        MOVGT            r5,r5,LSR #1
   55 00000098 C28DD001        ADDGT            r13,r13,#1
   56 0000009C         
   57 0000009C EA00000D        B                Finish
   58 000000A0         NEADD
   59 000000A0 E1550006        CMP              r5,r6       ;mantisa
   60 000000A4 C0455006        SUBGT            r5,r5,r6
   61 000000A8 B0465005        SUBLT            r5,r6,r5
   62 000000AC         
   63 000000AC E1A01081        MOV              r1,r1,lsl #1
   64 000000B0 E1A02082        MOV              r2,r2,lsl #1
   65 000000B4         
   66 000000B4 E1510002        CMP              r1,r2       ;Declare sign
   67 000000B8 C1A03003        MOVGT            r3,r3
   68 000000BC B1A03004        MOVLT            r3,r4
   69 000000C0         
   70 000000C0 E3A09000        MOV              r9,#0
   71 000000C4         loop                                 ;for normalize
   72 000000C4 E15A0005        CMP              r10,r5
   73 000000C8 C1A05085        MOVGT            r5,r5,lsl #1
   74 000000CC C2899001        ADDGT            r9,r9,#1
   75 000000D0 CAFFFFFB        BGT              loop
   76 000000D4         
   77 000000D4 104DD009        SUBNE            r13,r13,r9  ;exponent
   78 000000D8         
   79 000000D8         Finish
   80 000000D8 E59FA020        LDR              r10, mantissa
   81 000000DC         
   82 000000DC E045500A        SUB              r5,r5,r10
   83 000000E0         
   84 000000E0 E1A03F83        MOV              r3,r3,lsl #31
   85 000000E4 E1A0DB8D        MOV              r13,r13,lsl #23
   86 000000E8         
   87 000000E8 E08DB003        ADD              r11,r13,r3
   88 000000EC E08BB005        ADD              r11,r11,r5  ;result
   89 000000F0         
   90 000000F0         Savevalue
   91 000000F0 E580B000        STR              r11,[r0]    ;save the value to 
                                                            memory
   92 000000F4 E1A0F00E        MOV              pc,lr
   93 000000F8         
   94 000000F8         
   95 000000F8 3FC00000 
                       float1  &                0x3FC00000  ;1.5
   96 000000FC 40500000 
                       float2  &                0x40500000  ;3.25
   97 00000100         ;float1 & 0xC2680000 ;-58
   98 00000100         ;float2 & 0x426C0000 ;59
   99 00000100         ;float2 & 0x42680000 ;58
  100 00000100         ;float2 & 0x41C00000;24
  101 00000100         ;float1 & 0x426C0000;59
  102 00000100         ;float2 & 0x3FC00000
  103 00000100         ;float1 & 0x40500000
  104 00000100 00800000 
                       mantissa
                               &                0x00800000
  105 00000104 00040000 
                       Address1
                               &                0x40000     ;Declare address



ARM Macro Assembler    Page 3 


  106 00000108                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\task1.d -o.\objects\task1.o -IC:\Keil_v5\ARM\RV31\INC -IC:\K
eil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VER
SION SETA 526" --list=.\listings\task1.lst task1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Address1 00000104

Symbol: Address1
   Definitions
      At line 105 in file task1.s
   Uses
      At line 5 in file task1.s
Comment: Address1 used once
CMPNUM 00000028

Symbol: CMPNUM
   Definitions
      At line 17 in file task1.s
   Uses
      At line 11 in file task1.s
Comment: CMPNUM used once
EQADD 00000088

Symbol: EQADD
   Definitions
      At line 50 in file task1.s
   Uses
      At line 47 in file task1.s
Comment: EQADD used once
Finish 000000D8

Symbol: Finish
   Definitions
      At line 79 in file task1.s
   Uses
      At line 57 in file task1.s
Comment: Finish used once
Floatingpoint 00000000

Symbol: Floatingpoint
   Definitions
      At line 1 in file task1.s
   Uses
      None
Comment: Floatingpoint unused
NEADD 000000A0

Symbol: NEADD
   Definitions
      At line 58 in file task1.s
   Uses
      At line 48 in file task1.s
Comment: NEADD used once
Savevalue 000000F0

Symbol: Savevalue
   Definitions
      At line 90 in file task1.s
   Uses
      At line 15 in file task1.s
Comment: Savevalue used once
float1 000000F8

Symbol: float1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 95 in file task1.s
   Uses
      At line 6 in file task1.s
Comment: float1 used once
float2 000000FC

Symbol: float2
   Definitions
      At line 96 in file task1.s
   Uses
      At line 7 in file task1.s
Comment: float2 used once
loop 000000C4

Symbol: loop
   Definitions
      At line 71 in file task1.s
   Uses
      At line 75 in file task1.s
Comment: loop used once
mantissa 00000100

Symbol: mantissa
   Definitions
      At line 104 in file task1.s
   Uses
      At line 8 in file task1.s
      At line 80 in file task1.s

start 00000000

Symbol: start
   Definitions
      At line 4 in file task1.s
   Uses
      None
Comment: start unused
12 symbols
344 symbols in table
